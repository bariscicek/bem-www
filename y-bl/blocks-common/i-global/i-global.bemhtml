this._start, !this['i-global']: {

    var ps = {},
        // params 
        es = [
            'some-param'
        ], e;

    local(this._mode = 'default', this.block = 'i-global')
        while(e = es.shift()) {
            local(this.elem = e) ps[e] = this.apply();
        }

    this['i-global'] = this._.extend(ps,
        apply(this._mode='env', this.block='i-global'));

    this.apply();

}

block i-global {

    this._mode === 'env': {}

    default: {
        for(var p in this.ctx.params) {
            this['i-global'][p] = this.ctx.params[p];
        }
    }

    this.elem: ''

    elem some-param: 'some-val'

    // Params to JS
    this._mode === 'public-params' {
        this.elem: (
            {
                'some-param': 1
            }[this.elem] || false)
    }

}

block b-page, elem body, mix, !this.ctx._iGlobal: {

    var mix = apply(this.ctx._iGlobal = true);

    var js = {},
        _this = this['i-global'],
        block = { block: 'i-global', js: js }, e;

    // (NOTE): fill in params for JS
    local(this._mode = 'public-params', this.block = 'i-global') {
        for(e in _this) if(_this.hasOwnProperty(e) && apply(this.elem = e)) js[e] = _this[e];
    }

    mix ? mix.push(block) : (mix = [block]);

    return mix;

}

